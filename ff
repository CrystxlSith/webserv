[33m[2025-06-05 21:04:18] Parsing configuration file: config/testConfig.txt[0m
[32m/**********PARSING CONFIG FILE**********/[0m
[36m----------before parsing----------[0m
server {
    listen 8080;
    server_name localhost;
    host 127.0.0.1;
    root /www/simplesite;
    client_max_body_size 10M;
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 403 /errors/403.html;
    location / {
        methods GET POST;
autoindex off;
        index index.html;
        client_max_body_size 10M
    }
    location /upload {
        methods GET POST;
        upload_dir /user_upload;
        client_max_body_size 10M;
        autoindex on;
    }
    location /user_upload {
        methods GET POST DELETE;
        upload_dir /user_upload;
        client_max_body_size 10M;
        autoindex on;
    }
    location /errors {
        methods GET;
        client_max_body_size 10M;
        autoindex on;
    }
    location /cgi {
        methods GET;
        client_max_body_size 10M;
        autoindex on;
    }
    location /redirection {
        return 301 http://localhost:8080;
    }
    location /redirection2 {
        return 302 http://localhost:8080/errors/400.html;
    }
    location = /upload {
        return 301 http://localhost:8080;
    }
    location /cgi-bin {
        methods GET POST;
        cgi_ext .php .py;
        autoindex on;
        root ./;
    }
}
server {
    listen 8081;
    server_name server_8081;
    root /www/simplesite;
    location / {
        methods GET;
        index index.html;
        autoindex off;
        return 301 http://localhost:8080;
    }
}
server {
    listen 3000;
    server_name server_3000;
    root /www/armel;
    location / {
        methods GET;
        index index.html;
        autoindex off;
        return 301 http://localhost:8080;
    }
}
server {
    listen 4000;
    server_name server_4000;
    root /www/joaquim;
    location / {
        methods GET;
        index index.html;
        autoindex off;
        return 301 http://localhost:8080;
    }
}
server {
    listen 5000;
    server_name server_5000;
    root /www/yichun;
    location / {
        methods GET;
        index index.html;
        autoindex off;
        return 301 http://localhost:8080;
    }
}
[36m----------after parsing----------[0m
[32mServer found[0m
[32mServer closed by '}'[0m
Checking line: [listen 8080;]
Checking line: [server_name localhost;]
Checking line: [host 127.0.0.1;]
Checking line: [root /www/simplesite;]
Checking line: [client_max_body_size 10M;]
Checking line: [error_page 404 /errors/404.html;]
error page path: /errors/404.html
Checking line: [error_page 500 /errors/500.html;]
error page path: /errors/500.html
Checking line: [error_page 403 /errors/403.html;]
error page path: /errors/403.html
Checking line: [location / {]
Location: /
Path: /
Line: methods GET POST;
Line: autoindex off;
Line: index index.html;
Line: client_max_body_size 10M
Line: }
Checking line: [location /upload {]
Location: /upload
Path: /upload
Line: methods GET POST;
Line: upload_dir /user_upload;
Line: client_max_body_size 10M;
Line: autoindex on;
Line: }
Checking line: [location /user_upload {]
Location: /user_upload
Path: /user_upload
Line: methods GET POST DELETE;
Line: upload_dir /user_upload;
Line: client_max_body_size 10M;
Line: autoindex on;
Line: }
Checking line: [location /errors {]
Location: /errors
Path: /errors
Line: methods GET;
Line: client_max_body_size 10M;
Line: autoindex on;
Line: }
Checking line: [location /cgi {]
Location: /cgi
Path: /cgi
Line: methods GET;
Line: client_max_body_size 10M;
Line: autoindex on;
Line: }
Checking line: [location /redirection {]
Location: /redirection
Path: /redirection
Line: return 301 http://localhost:8080;
Line: }
Checking line: [location /redirection2 {]
Location: /redirection2
Path: /redirection2
Line: return 302 http://localhost:8080/errors/400.html;
Line: }
Checking line: [location = /upload {]
Location: =
Path: =
Line: return 301 http://localhost:8080;
Line: }
Checking line: [location /cgi-bin {]
Location: /cgi-bin
Path: /cgi-bin
Line: methods GET POST;
Line: cgi_ext .php .py;
Line: autoindex on;
Line: root ./;
Line: }

[32mServer filled[0m
Server Configuration:
  Port: 8080
  Host: localhost
  Root: /www/simplesite
  Index: 
  CGI: 
  Upload: 
  Client Max Body Size: 10M
  Allow Methods: GET POST DELETE 
  Locations: 9



[32mServer added[0m
[32mServer found[0m
[32mServer closed by '}'[0m
Checking line: [listen 8081;]
Checking line: [server_name server_8081;]
Checking line: [root /www/simplesite;]
Checking line: [location / {]
Location: /
Path: /
Line: methods GET;
Line: index index.html;
Line: autoindex off;
Line: return 301 http://localhost:8080;
Line: }

[32mServer filled[0m
Server Configuration:
  Port: 8081
  Host: server_8081
  Root: /www/simplesite
  Index: 
  CGI: 
  Upload: 
  Client Max Body Size: 
  Allow Methods: GET POST DELETE 
  Locations: 1




[32mServer added[0m
[32mServer found[0m
[32mServer closed by '}'[0m
Checking line: [listen 3000;]
Checking line: [server_name server_3000;]
Checking line: [root /www/armel;]
Checking line: [location / {]
Location: /
Path: /
Line: methods GET;
Line: index index.html;
Line: autoindex off;
Line: return 301 http://localhost:8080;
Line: }

[32mServer filled[0m
Server Configuration:
  Port: 3000
  Host: server_3000
  Root: /www/armel
  Index: 
  CGI: 
  Upload: 
  Client Max Body Size: 
  Allow Methods: GET POST DELETE 
  Locations: 1





[32mServer added[0m
[32mServer found[0m
[32mServer closed by '}'[0m
Checking line: [listen 4000;]
Checking line: [server_name server_4000;]
Checking line: [root /www/joaquim;]
Checking line: [location / {]
Location: /
Path: /
Line: methods GET;
Line: index index.html;
Line: autoindex off;
Line: return 301 http://localhost:8080;
Line: }

[32mServer filled[0m
Server Configuration:
  Port: 4000
  Host: server_4000
  Root: /www/joaquim
  Index: 
  CGI: 
  Upload: 
  Client Max Body Size: 
  Allow Methods: GET POST DELETE 
  Locations: 1



[32mServer added[0m
[32mServer found[0m
[32mServer closed by '}'[0m
Checking line: [listen 5000;]
Checking line: [server_name server_5000;]
Checking line: [root /www/yichun;]
Checking line: [location / {]
Location: /
Path: /
Line: methods GET;
Line: index index.html;
Line: autoindex off;
Line: return 301 http://localhost:8080;
Line: }

[32mServer filled[0m
Server Configuration:
  Port: 5000
  Host: server_5000
  Root: /www/yichun
  Index: 
  CGI: 
  Upload: 
  Client Max Body Size: 
  Allow Methods: GET POST DELETE 
  Locations: 1







[32mServer added[0m





[32m/**********END OF PARSING**********/[0m
DÃ©marrage de 5 serveurs...
Configuration du serveur 0 sur port 8080
Flag at socket creation: 2
Flag at socket creation: 2
Bind Success
Configuration du serveur 1 sur port 8081
Flag at socket creation: 2
Flag at socket creation: 2
Bind Success
Configuration du serveur 2 sur port 3000
Flag at socket creation: 2
Flag at socket creation: 2
Bind Success
Configuration du serveur 3 sur port 4000
Flag at socket creation: 2
Flag at socket creation: 2
Bind Success
Configuration du serveur 4 sur port 5000
Flag at socket creation: 2
Flag at socket creation: 2
Bind Success
checkTimeouts
checkTimeouts
Nouvelle connexion acceptÃ©e sur serveur 0 (fd:9)
checkTimeouts
Traitement requÃªte client sur serveur 0
method: GET
uri: /upload/
http version: HTTP/1.1
MÃ©thodes autorisÃ©es pour cette location: GET POST 
ðŸ‘» maxSize: 10485760
ðŸ‘» _body.length(): 0
ðŸ‘» verif :1
SEVER-GET
ðŸ‘» in process BEFORE EVYTHING
ROOT : /www/simplesite
Path : /upload/
Exist path : ./www/simplesite/upload/
ðŸ‘» amethod process try

=== DEBUG execute ===
MÃ©thode: GET
URI: /upload/
Chemin absolu: ./www/simplesite/upload/
=== DEBUG checkIfCgi ===
Checking filepath: ./www/simplesite/upload/
Extension found: ./www/simplesite/upload/
Not a CGI script
Type de fichier dÃ©tectÃ©: 1
[32mTraitement comme rÃ©pertoire[0m
indexFile : ./www/simplesite/upload/
GET-autoindex : on
[32mAutoindex is on[0m
Directory path: ./www/simplesite/upload/
ðŸ‘» fillResponse called with statusCode: 200
ðŸ‘» Request has no priority, setting status to 200
=== FIN DEBUG execute ===

Code de rÃ©ponse : 200
[1;32m[Response] Code: 200 - OK[0m
Connection kept alive for client (fd:9)
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
Connection 9 timed out after 6 seconds
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts
checkTimeouts

[31mSignal reÃ§u: 2[0m
Nettoyage des ressources...
Fermeture de l'instance EpollManager...
ArrÃªt des serveurs...





